##replace Token value after each login
@token = eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzYW1wbGVVc2VyIiwiaWF0IjoxNzUwMDQzMjE3LCJleHAiOjE3NTAxMjk2MTd9.9boM4n6QUf7ZimVLRQjjqTEC3xQ3V6YyBR4EtqXHB6Y
@userId = 1
### Create User

POST http://localhost:8081/api/v1/auth/register
Content-Type: application/json
Accept: application/json

{
  "username": "sampleUser",
  "email": "sampleUser@email.com",
  "firstName": "sampleUser",
  "lastName": "SomeoneElse",
  "password": "secret1234",
  "role": "USER",
  "active": true
}

### Login
## get auth token

POST http://localhost:8081/api/v1/auth/login
Content-Type: application/json

{
  "username": "sampleUser",
  "password": "secret1234"
}


###

### Get User by ID
GET http://localhost:8081/api/v1/users/2
Accept: application/json
Authorization: Bearer {{token}}

###

### Get All Users
GET http://localhost:8081/api/v1/users
Accept: application/json
Authorization: Bearer {{token}}


###

### Update User
PUT http://localhost:8081/api/v1/users/1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
  "username": "updated.user",
  "email": "updated.email@example.com",
  "firstName": "UpdatedFirstName",
  "lastName": "UpdatedLastName",
  "role": "USER",
  "customAttributes": {
    "phone": "+1234567890",
    "preferredLanguage": "en"
  },
  "profilePictureUrl": "https://example.com/avatar.jpg"
}

### Test Update User with Invalid Fields (should be ignored)
PUT http://localhost:8081/api/v1/users/1
Content-Type: application/json
Accept: application/json
Authorization: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJzYW1wbGVVc2VyIiwiaWF0IjoxNzQ3MTkxNTM4LCJleHAiOjE3NDcyNzc5Mzh9.U3EKjp9Y6H4cE2kv_SWXi8_vVffwn1apKqYHw-fJNRE

{
  "username": "arjun.sura",
  "firstName": "Arjun",
  "lastName": "Sura",
  "email": "arjun.email@example.com",
  "role": "ADMIN",
  "customAttributes": {
    "phone": "+9876543210",
    "department": "Engineering"
  },
  "profilePictureUrl": "https://example.com/arjun-avatar.jpg"
}

### Get User Addresses
GET http://localhost:8081/api/v1/users/{{userId}}/addresses
Accept: application/json
Authorization: Bearer {{token}}

###

### Get User Address by ID
GET http://localhost:8081/api/v1/users/{{userId}}/addresses/1
Accept: application/json
Authorization: Bearer {{token}}

###

### Create Address
POST http://localhost:8081/api/v1/users/{{userId}}/addresses
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
  "addressType": "shipping",
  "isDefault": true,
  "streetAddress": "123 Main St",
  "city": "New York",
  "state": "NY",
  "postalCode": "10001",
  "country": "USA"
}

###

### Update Address
PUT http://localhost:8081/api/v1/users/{{userId}}/addresses/1
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{token}}

{
  "addressType": "billing",
  "isDefault": true,
  "streetAddress": "456 Park Ave",
  "city": "New York",
  "state": "NY",
  "postalCode": "10022",
  "country": "USA"
}

###

### Delete Address
DELETE http://localhost:8081/api/v1/users/{{userId}}/addresses/1
Authorization: Bearer {{token}}

###

### Logout User
# This will invalidate the current JWT token
# Expected responses:
# 200 - Logout successful
# 400 - No token provided
# 400 - Invalid token format
# 400 - Token already invalidated
# 500 - Internal server error
POST http://localhost:8081/api/v1/auth/logout
Authorization: Bearer {{token}}
