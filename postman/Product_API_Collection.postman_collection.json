{
  "info": {
    "name": "Mankind Product API Collection",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Add Product",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"QuantumCompute Z1\",\n  \"brand\": \"Quantix\",\n  \"category\": \"Quantum Processor\",\n  \"specifications\": \"Qubits: 256, Coherence Time: 150us, Quantum Volume: 128\",\n  \"price\": 9999.99,\n  \"imageUrl\": \"https://example.com/images/quantum.jpg\",\n  \"availability\": true\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/v1/products",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "products"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "let json = pm.response.json();",
              "pm.test(\"Response contains ID\", function () {",
              "    pm.expect(json.id).to.not.be.undefined;",
              "    pm.environment.set(\"product_id\", json.id);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get Product by ID",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/v1/products/{{product_id}}",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "products", "{{product_id}}"]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "let json = pm.response.json();",
              "pm.test(\"Product name exists\", function () {",
              "    pm.expect(json.name).to.be.a(\"string\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get All Products (Paginated)",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/v1/products?page=0&size=10",
          "host": ["{{base_url}}"],
          "path": ["api", "v1", "products"],
          "query": [
            {
              "key": "page",
              "value": "0"
            },
            {
              "key": "size",
              "value": "10"
            }
          ]
        }
      },
      "response": []
    }
  ]
}
